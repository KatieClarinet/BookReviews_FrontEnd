{"ast":null,"code":"var _jsxFileName = \"/Users/katiewalters/Desktop/SoC_Projects/BookReviews_FrontEnd/BookReviews_FrontEnd/src/Components/Search/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FetchData from '../FetchData/FetchData';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [searchField, setSearchField] = useState(\"\"); //only show matching search results once user starts typing\n\n  const [searchShow, setSearchShow] = useState(false); //here i need to store the user input\n\n  const handleChange = e => {\n    setSearchField(e.target.value);\n\n    if (e.target.value === \"\") {\n      setSearchShow(false);\n    } else {\n      setSearchShow(true);\n    }\n  };\n\n  function Data() {\n    if (searchShow) {\n      return /*#__PURE__*/_jsxDEV(FetchData, {\n        searchField: searchField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      style: {\n        borderBottom: \"solid 1px\",\n        paddingBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), \" |\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/reviews\",\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), \" |\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo\",\n        src: \"https://live.staticflickr.com/65535/51860259596_1a1a8afb3f_w.jpg\",\n        alt: \"becksbookreviews logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search\",\n        type: \"search\",\n        placeholder: \"Search by author or title...\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), Data()]\n  }, void 0, true);\n}\n\n_s(Search, \"oc7St+qmN7wJWQr+5NPs6ovJfCA=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","FetchData","Link","Search","searchField","setSearchField","searchShow","setSearchShow","handleChange","e","target","value","Data","borderBottom","paddingBottom"],"sources":["/Users/katiewalters/Desktop/SoC_Projects/BookReviews_FrontEnd/BookReviews_FrontEnd/src/Components/Search/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FetchData from '../FetchData/FetchData';\nimport { Link } from \"react-router-dom\";\n\nfunction Search() {\n    const [searchField, setSearchField] = useState(\"\");\n    //only show matching search results once user starts typing\n    const [searchShow, setSearchShow] = useState(false);\n   \n//here i need to store the user input\n    const handleChange = e => {\n        setSearchField(e.target.value);\n        if(e.target.value===\"\"){\n            setSearchShow(false);\n          }\n          else {\n            setSearchShow(true);\n          }\n    };\n\n    function Data() {\n            if (searchShow) {\n        return (\n                <FetchData searchField={searchField} />\n            \n        );\n            }\n    }\n    return(\n        <>\n    <nav\n      style={{\n        borderBottom: \"solid 1px\",\n        paddingBottom: \"1rem\",\n      }}\n    >\n    <Link to=\"/\">Home</Link> |{\" \"}\n      <Link to=\"/reviews\">Reviews</Link> |{\" \"}\n    </nav>\n            <div>\n                <img className=\"logo\" src=\"https://live.staticflickr.com/65535/51860259596_1a1a8afb3f_w.jpg\" alt=\"becksbookreviews logo\" />\n           </div>\n           \n        <div>\n                <input className=\"search\"\n                    type=\"search\"\n                    placeholder=\"Search by author or title...\"\n                    onChange={handleChange}/>\n        </div>\n            {Data()}\n        </>\n    )\n}\n\nexport default Search;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EACd,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C,CADc,CAEd;;EACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C,CAHc,CAKlB;;EACI,MAAMQ,YAAY,GAAGC,CAAC,IAAI;IACtBJ,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;;IACA,IAAGF,CAAC,CAACC,MAAF,CAASC,KAAT,KAAiB,EAApB,EAAuB;MACnBJ,aAAa,CAAC,KAAD,CAAb;IACD,CAFH,MAGO;MACHA,aAAa,CAAC,IAAD,CAAb;IACD;EACN,CARD;;EAUA,SAASK,IAAT,GAAgB;IACR,IAAIN,UAAJ,EAAgB;MACpB,oBACQ,QAAC,SAAD;QAAW,WAAW,EAAEF;MAAxB;QAAA;QAAA;QAAA;MAAA,QADR;IAIK;EACR;;EACD,oBACI;IAAA,wBACJ;MACE,KAAK,EAAE;QACLS,YAAY,EAAE,WADT;QAELC,aAAa,EAAE;MAFV,CADT;MAAA,wBAMA,QAAC,IAAD;QAAM,EAAE,EAAC,GAAT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANA,QAM2B,GAN3B,eAOE,QAAC,IAAD;QAAM,EAAE,EAAC,UAAT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF,QAOuC,GAPvC;IAAA;MAAA;MAAA;MAAA;IAAA,QADI,eAUI;MAAA,uBACI;QAAK,SAAS,EAAC,MAAf;QAAsB,GAAG,EAAC,kEAA1B;QAA6F,GAAG,EAAC;MAAjG;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAVJ,eAcA;MAAA,uBACQ;QAAO,SAAS,EAAC,QAAjB;QACI,IAAI,EAAC,QADT;QAEI,WAAW,EAAC,8BAFhB;QAGI,QAAQ,EAAEN;MAHd;QAAA;QAAA;QAAA;MAAA;IADR;MAAA;MAAA;MAAA;IAAA,QAdA,EAoBKI,IAAI,EApBT;EAAA,gBADJ;AAwBH;;GAhDQT,M;;KAAAA,M;AAkDT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}